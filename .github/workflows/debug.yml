name: Debug

on:
  workflow_dispatch:

env:
  TARGET_TAG: v0.0.7
  
jobs:
  # step1:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608 # v4.1.0
  #     - name: Debug
  #       run: |
  #         git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
  #         git config --global user.name "github-actions"
  #         export RELEASE_BRANCH="release-$TARGET_TAG+$((RANDOM%1000))"
  #         git switch -c $RELEASE_BRANCH
  #         git commit --allow-empty -m "Release $RELEASE_BRANCH"
  #         git push --set-upstream origin $RELEASE_BRANCH
  #         export RELEASE_TAG_SHA=$(git rev-parse HEAD)

  #         git tag $TARGET_TAG $RELEASE_TAG_SHA
  #         git push --force origin $TARGET_TAG

  step2:
    runs-on: ubuntu-latest
    # needs: step1
    steps:
      - uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608 # v4.1.0
      - name: Debug
        run: |
          export encoded_token_with_prefix=$(git config --local --get http.https://github.com/.extraheader)
          export encoded_token=${encoded_token_with_prefix#AUTHORIZATION: basic }
          export decoded_token_with_prefix=$(echo $encoded_token | base64 --decode)
          export GITHUB_TOKEN=${decoded_token_with_prefix#x-access-token:}

          git checkout master
          git tag $TARGET_TAG
          git push --force origin $TARGET_TAG
          curl -Lv -X POST -H "Authorization: token $GITHUB_TOKEN" https://api.github.com/repos/$GITHUB_REPOSITORY/releases -d '{"tag_name":"$TARGET_TAG","target_commitish":"master","name":"$TARGET_TAG","body":"Stable release","draft":false,"prerelease":false,"generate_release_notes":false}'
          # curl -X DELETE -H "Authorization: token $GITHUB_TOKEN" "https://api.github.com/repos/$GITHUB_REPOSITORY/releases/$JUNK_RELEASE_ID"
